services:
  cluster-master:
    platform: linux/amd64
    container_name: cluster-master
    build:
      context: .
      dockerfile: |-
        FROM firasj/spark-docker-cluster
        COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv
        RUN uv venv /opt/venv

        ENV VIRTUAL_ENV=/opt/venv \
            PATH="/opt/venv/bin:$PATH"

        COPY ./app/requirements.txt /tmp/requirements.txt
        RUN --mount=type=cache,target=/root/.cache/uv \
            uv pip install --no-cache-dir -r /tmp/requirements.txt
    ports:
      - "8088:8088"
      - "4040:4040"
      - "19888:19888"
      - "9000:9000"
      - "9870:9870"
    volumes:
      - "./app:/app"
    networks:
      - spark-cluster
    depends_on:
      - cluster-slave-1
      - cassandra-server
    hostname: cluster-master

    environment:
      - SPARK_DRIVER_MEMORY=4g
      - SPARK_EXECUTOR_MEMORY=4g
      - JAVA_OPTS=-Xms2g -Xmx4g
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - UV_COMPILE_BYTECODE=1
      
    tty: true
    working_dir: /app
    # You can comment the entrypoint to run the script manually inside the container
    entrypoint: 
      - bash
      - /app/app.sh
    
  cluster-slave-1:
    platform: linux/amd64
    container_name: cluster-slave-1
    build:
      context: .
      dockerfile: |-
        FROM firasj/spark-docker-cluster
        COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv
        RUN uv venv /opt/venv

        ENV VIRTUAL_ENV=/opt/venv \
            PATH="/opt/venv/bin:$PATH"

        COPY ./app/requirements.txt /tmp/requirements.txt
        RUN --mount=type=cache,target=/root/.cache/uv \
            uv pip install --no-cache-dir -r /tmp/requirements.txt
    networks:
      - spark-cluster
    hostname: cluster-slave-1
    tty: true

    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - UV_COMPILE_BYTECODE=1

  cassandra-server:
    image: cassandra
    container_name: cassandra-server
    ports:
      - "7000:7000"
    networks:
      - spark-cluster
    

networks:
  spark-cluster:
    driver: bridge